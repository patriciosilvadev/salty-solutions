service:
  name: fishing-app

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTimeToLive
      Resource: "arn:aws:dynamodb:us-east-1:*:*"
  environment:
    SERVERLESS_STAGE: ${self:provider.stage}
    ROLLBAR_KEY: ${env:ROLLBAR_KEY}

functions:
  graphql:
    handler: ./src/server.graphql
    events:
      - http:
          cors: true
          method: any
          path: api

  preload-forecast:
    handler: src/preloaders.forecast
    events:
      - schedule:
          name: ForecastPreloader-${self:provider.stage}
          enabled: ${self:custom.schedule_enabled.${opt:stage}, false}
          rate: rate(3 hours)

resources:
  Resources:
    MainTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        TableName: salty-solutions-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: N
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

custom:
  serverless-offline:
    port: 4000
  schedule_enabled:
    prod: true
    dev: false
